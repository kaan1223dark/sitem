{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hu/Downloads/Compressed/luuppi-next-main4%20-%20Kopya/luuppi-next-main/next/src/libs/utils/first-letter-uppercase.ts"],"sourcesContent":["/**\n * Converts first letter of a string to uppercase. Useful for\n * finnish month names.\n * @param str string to be converted\n * @returns string with first letter in uppercase\n */\nexport const firstLetterToUpperCase = (str: string) =>\n  str.charAt(0).toUpperCase() + str.slice(1);\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AACM,MAAM,yBAAyB,CAAC,MACrC,IAAI,MAAM,CAAC,GAAG,WAAW,KAAK,IAAI,KAAK,CAAC","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hu/Downloads/Compressed/luuppi-next-main4%20-%20Kopya/luuppi-next-main/next/src/libs/utils/format-date-range.ts"],"sourcesContent":["import { SupportedLanguage } from '@/models/locale';\nimport { longDateFormat, shortDateFormat, shortTimeFormat } from '../constants';\nimport { firstLetterToUpperCase } from './first-letter-uppercase';\n\nexport const formatDateRangeLong = (\n  start: Date,\n  end: Date,\n  lang: SupportedLanguage,\n): string => {\n  const startUTC = new Date(\n    start.getTime() + start.getTimezoneOffset() * 60000,\n  );\n\n  /* eslint-disable */\n  // ... diğer importlar ve kodlar\n  console.log('desteklenen dilleri yazdir' + lang);\n  // ... diğer kodlar\n  /* eslint-enable */\n\n  const endUTC = new Date(end.getTime() + end.getTimezoneOffset() * 60000);\n\n  const isMultipleDays = startUTC.toDateString() !== endUTC.toDateString();\n\n  if (!isMultipleDays) {\n    if (start.toISOString() === end.toISOString()) {\n      return `${firstLetterToUpperCase(\n        new Intl.DateTimeFormat(lang, {\n          hour: 'numeric',\n          minute: 'numeric',\n          day: 'numeric',\n          month: 'short',\n          weekday: 'long',\n          timeZone: 'Europe/Helsinki',\n        }).format(start),\n      )}`;\n    }\n\n    return `${firstLetterToUpperCase(\n      start.toLocaleString(lang, longDateFormat),\n    )} - ${start.toLocaleString(lang, shortTimeFormat)}-${end.toLocaleString(lang, shortTimeFormat)}`;\n  }\n\n  return `${firstLetterToUpperCase(\n    start.toLocaleString(lang, shortDateFormat),\n  )} - ${firstLetterToUpperCase(end.toLocaleString(lang, shortDateFormat))}`;\n};\n\nexport const formatDateRangeShort = (\n  start: Date,\n  end: Date,\n  lang: SupportedLanguage,\n): string => {\n  const startUTC = new Date(\n    start.getTime() + start.getTimezoneOffset() * 60000,\n  );\n  const endUTC = new Date(end.getTime() + end.getTimezoneOffset() * 60000);\n  if (start.toISOString() === end.toISOString()) {\n    return `${new Intl.DateTimeFormat(lang, {\n      hour: 'numeric',\n      minute: 'numeric',\n      timeZone: 'Europe/Helsinki',\n    }).format(start)}`;\n  }\n  if (startUTC.toDateString() === endUTC.toDateString()) {\n    return `${new Intl.DateTimeFormat(lang, {\n      hour: 'numeric',\n      minute: 'numeric',\n      timeZone: 'Europe/Helsinki',\n    }).format(start)} - ${new Intl.DateTimeFormat(lang, {\n      hour: 'numeric',\n      minute: 'numeric',\n      timeZone: 'Europe/Helsinki',\n    }).format(end)}`;\n  } else {\n    return `${new Intl.DateTimeFormat(lang, {\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      timeZone: 'Europe/Helsinki',\n    }).format(start)} - ${new Intl.DateTimeFormat(lang, {\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      timeZone: 'Europe/Helsinki',\n    }).format(end)}`;\n  }\n};\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;;;AAEO,MAAM,sBAAsB,CACjC,OACA,KACA;IAEA,MAAM,WAAW,IAAI,KACnB,MAAM,OAAO,KAAK,MAAM,iBAAiB,KAAK;IAGhD,kBAAkB,GAClB,gCAAgC;IAChC,QAAQ,GAAG,CAAC,+BAA+B;IAC3C,mBAAmB;IACnB,iBAAiB,GAEjB,MAAM,SAAS,IAAI,KAAK,IAAI,OAAO,KAAK,IAAI,iBAAiB,KAAK;IAElE,MAAM,iBAAiB,SAAS,YAAY,OAAO,OAAO,YAAY;IAEtE,IAAI,CAAC,gBAAgB;QACnB,IAAI,MAAM,WAAW,OAAO,IAAI,WAAW,IAAI;YAC7C,OAAO,GAAG,CAAA,GAAA,uJAAA,CAAA,yBAAsB,AAAD,EAC7B,IAAI,KAAK,cAAc,CAAC,MAAM;gBAC5B,MAAM;gBACN,QAAQ;gBACR,KAAK;gBACL,OAAO;gBACP,SAAS;gBACT,UAAU;YACZ,GAAG,MAAM,CAAC,SACT;QACL;QAEA,OAAO,GAAG,CAAA,GAAA,uJAAA,CAAA,yBAAsB,AAAD,EAC7B,MAAM,cAAc,CAAC,MAAM,gJAAA,CAAA,iBAAc,GACzC,GAAG,EAAE,MAAM,cAAc,CAAC,MAAM,gJAAA,CAAA,kBAAe,EAAE,CAAC,EAAE,IAAI,cAAc,CAAC,MAAM,gJAAA,CAAA,kBAAe,GAAG;IACnG;IAEA,OAAO,GAAG,CAAA,GAAA,uJAAA,CAAA,yBAAsB,AAAD,EAC7B,MAAM,cAAc,CAAC,MAAM,gJAAA,CAAA,kBAAe,GAC1C,GAAG,EAAE,CAAA,GAAA,uJAAA,CAAA,yBAAsB,AAAD,EAAE,IAAI,cAAc,CAAC,MAAM,gJAAA,CAAA,kBAAe,IAAI;AAC5E;AAEO,MAAM,uBAAuB,CAClC,OACA,KACA;IAEA,MAAM,WAAW,IAAI,KACnB,MAAM,OAAO,KAAK,MAAM,iBAAiB,KAAK;IAEhD,MAAM,SAAS,IAAI,KAAK,IAAI,OAAO,KAAK,IAAI,iBAAiB,KAAK;IAClE,IAAI,MAAM,WAAW,OAAO,IAAI,WAAW,IAAI;QAC7C,OAAO,GAAG,IAAI,KAAK,cAAc,CAAC,MAAM;YACtC,MAAM;YACN,QAAQ;YACR,UAAU;QACZ,GAAG,MAAM,CAAC,QAAQ;IACpB;IACA,IAAI,SAAS,YAAY,OAAO,OAAO,YAAY,IAAI;QACrD,OAAO,GAAG,IAAI,KAAK,cAAc,CAAC,MAAM;YACtC,MAAM;YACN,QAAQ;YACR,UAAU;QACZ,GAAG,MAAM,CAAC,OAAO,GAAG,EAAE,IAAI,KAAK,cAAc,CAAC,MAAM;YAClD,MAAM;YACN,QAAQ;YACR,UAAU;QACZ,GAAG,MAAM,CAAC,MAAM;IAClB,OAAO;QACL,OAAO,GAAG,IAAI,KAAK,cAAc,CAAC,MAAM;YACtC,OAAO;YACP,KAAK;YACL,MAAM;YACN,QAAQ;YACR,UAAU;QACZ,GAAG,MAAM,CAAC,OAAO,GAAG,EAAE,IAAI,KAAK,cAAc,CAAC,MAAM;YAClD,OAAO;YACP,KAAK;YACL,MAAM;YACN,QAAQ;YACR,UAAU;QACZ,GAAG,MAAM,CAAC,MAAM;IAClB;AACF","debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hu/Downloads/Compressed/luuppi-next-main4%20-%20Kopya/luuppi-next-main/next/src/components/EventsList/EventsList.tsx"],"sourcesContent":["import { longDateFormat } from '@/libs/constants';\nimport { firstLetterToUpperCase } from '@/libs/utils/first-letter-uppercase';\nimport { formatDateRangeLong } from '@/libs/utils/format-date-range';\nimport { Event } from '@/models/event';\nimport { SupportedLanguage } from '@/models/locale';\nimport Link from 'next/link';\nimport { IoTicketSharp } from 'react-icons/io5';\n\ninterface EventListProps {\n  events: Event[];\n  showPastEvents: boolean;\n  lang: SupportedLanguage;\n}\n\nexport default function EventsList({\n  events,\n  showPastEvents,\n  lang,\n}: EventListProps) {\n  const groupEventsByDate = (events: Event[]) => {\n    const groupedEvents = events.reduce(\n      (acc, event) => {\n        if (!event.start) return acc;\n        const dateStr = event.start.toDateString();\n        if (!acc[dateStr]) {\n          acc[dateStr] = {\n            date: event.start,\n            events: [],\n          };\n        }\n        acc[dateStr].events.push(event);\n        return acc;\n      },\n      {} as Record<string, { date: Date; events: typeof events }>,\n    );\n    return groupedEvents;\n  };\n\n  const getEvents = (showAll: boolean) => {\n    const sortedEvents = events\n      .filter((e) => e.end && e.start)\n      .sort((a, b) => a.start.getTime() - b.start.getTime());\n    if (showAll) {\n      return groupEventsByDate(sortedEvents);\n    }\n    const filtered = sortedEvents.filter((event) => event.end > new Date());\n    return groupEventsByDate(filtered);\n  };\n\n  return (\n    <div className=\"flex flex-col gap-12\">\n      {Object.values(getEvents(showPastEvents)).map((group) => (\n        <div key={group.date.toDateString()} className=\"flex flex-col gap-2\">\n          <h2 className=\"text-xl font-bold\">\n            {firstLetterToUpperCase(\n              group.date.toLocaleDateString(\n                lang,\n                showPastEvents\n                  ? { ...longDateFormat, year: 'numeric' }\n                  : longDateFormat,\n              ),\n            )}\n          </h2>\n          <div className=\"flex flex-col gap-4\">\n            {group.events.map((event) => (\n              <Link\n                key={\n                  event.start.toISOString() +\n                  event.end.toISOString() +\n                  event.title\n                }\n                className=\"flex gap-4 rounded-lg bg-background-50 transition-all delay-300 ease-in-out\"\n                href={`/${lang}/events/${event.id}`}\n                id={event.start.toDateString() + event.title}\n              >\n                <span className=\"w-1 shrink-0 rounded-l-lg bg-secondary-400\" />\n                <div className=\"flex flex-col py-2\">\n                  <div className=\"flex items-center gap-2\">\n                    <h3 className=\"text-lg font-bold max-md:text-base\">\n                      {event.title}\n                    </h3>\n                    {event.hasTickets && <IoTicketSharp className=\"inline\" />}\n                  </div>\n                  <div className=\"flex gap-2\">\n                    {formatDateRangeLong(\n                      new Date(event.start),\n                      new Date(event.end),\n                      lang,\n                    )}\n                  </div>\n                  <p className=\"line-clamp-3 max-w-xl pr-4 text-sm text-gray-500 max-md:text-xs max-sm:break-all\">\n                    {event.description}\n                  </p>\n                </div>\n              </Link>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AACA;AAGA;AACA;;;;;;;AAQe,SAAS,WAAW,EACjC,MAAM,EACN,cAAc,EACd,IAAI,EACW;IACf,MAAM,oBAAoB,CAAC;QACzB,MAAM,gBAAgB,OAAO,MAAM,CACjC,CAAC,KAAK;YACJ,IAAI,CAAC,MAAM,KAAK,EAAE,OAAO;YACzB,MAAM,UAAU,MAAM,KAAK,CAAC,YAAY;YACxC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE;gBACjB,GAAG,CAAC,QAAQ,GAAG;oBACb,MAAM,MAAM,KAAK;oBACjB,QAAQ,EAAE;gBACZ;YACF;YACA,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC;YACzB,OAAO;QACT,GACA,CAAC;QAEH,OAAO;IACT;IAEA,MAAM,YAAY,CAAC;QACjB,MAAM,eAAe,OAClB,MAAM,CAAC,CAAC,IAAM,EAAE,GAAG,IAAI,EAAE,KAAK,EAC9B,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,CAAC,OAAO,KAAK,EAAE,KAAK,CAAC,OAAO;QACrD,IAAI,SAAS;YACX,OAAO,kBAAkB;QAC3B;QACA,MAAM,WAAW,aAAa,MAAM,CAAC,CAAC,QAAU,MAAM,GAAG,GAAG,IAAI;QAChE,OAAO,kBAAkB;IAC3B;IAEA,qBACE,6MAAC;QAAI,WAAU;kBACZ,OAAO,MAAM,CAAC,UAAU,iBAAiB,GAAG,CAAC,CAAC,sBAC7C,6MAAC;gBAAoC,WAAU;;kCAC7C,6MAAC;wBAAG,WAAU;kCACX,CAAA,GAAA,uJAAA,CAAA,yBAAsB,AAAD,EACpB,MAAM,IAAI,CAAC,kBAAkB,CAC3B,MACA,iBACI;4BAAE,GAAG,gJAAA,CAAA,iBAAc;4BAAE,MAAM;wBAAU,IACrC,gJAAA,CAAA,iBAAc;;;;;;kCAIxB,6MAAC;wBAAI,WAAU;kCACZ,MAAM,MAAM,CAAC,GAAG,CAAC,CAAC,sBACjB,6MAAC,+JAAA,CAAA,UAAI;gCAMH,WAAU;gCACV,MAAM,CAAC,CAAC,EAAE,KAAK,QAAQ,EAAE,MAAM,EAAE,EAAE;gCACnC,IAAI,MAAM,KAAK,CAAC,YAAY,KAAK,MAAM,KAAK;;kDAE5C,6MAAC;wCAAK,WAAU;;;;;;kDAChB,6MAAC;wCAAI,WAAU;;0DACb,6MAAC;gDAAI,WAAU;;kEACb,6MAAC;wDAAG,WAAU;kEACX,MAAM,KAAK;;;;;;oDAEb,MAAM,UAAU,kBAAI,6MAAC,kJAAA,CAAA,gBAAa;wDAAC,WAAU;;;;;;;;;;;;0DAEhD,6MAAC;gDAAI,WAAU;0DACZ,CAAA,GAAA,kJAAA,CAAA,sBAAmB,AAAD,EACjB,IAAI,KAAK,MAAM,KAAK,GACpB,IAAI,KAAK,MAAM,GAAG,GAClB;;;;;;0DAGJ,6MAAC;gDAAE,WAAU;0DACV,MAAM,WAAW;;;;;;;;;;;;;+BAxBpB,MAAM,KAAK,CAAC,WAAW,KACvB,MAAM,GAAG,CAAC,WAAW,KACrB,MAAM,KAAK;;;;;;;;;;;eAjBX,MAAM,IAAI,CAAC,YAAY;;;;;;;;;;AAiDzC;KAvFwB","debugId":null}}]
}