{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/i18n-config.ts"],"sourcesContent":["export const i18n = {\n  defaultLocale: 'tr',\n  locales: ['en', 'tr'],\n} as const;\n\nexport type Locale = (typeof i18n)['locales'][number];\n"],"names":[],"mappings":";;;AAAO,MAAM,OAAO;IAClB,eAAe;IACf,SAAS;QAAC;QAAM;KAAK;AACvB"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { match as matchLocale } from '@formatjs/intl-localematcher';\nimport Negotiator from 'negotiator';\nimport type { NextRequest } from 'next/server';\nimport { NextResponse } from 'next/server';\nimport { i18n } from './i18n-config';\nimport { SupportedLanguage } from './models/locale';\n\nfunction getLocale(request: NextRequest): string | undefined {\n  // Use cookie if it exists and is valid\n  const langCookie = request.cookies.get('lang');\n  if (\n    langCookie &&\n    i18n.locales.includes(langCookie.value as SupportedLanguage)\n  ) {\n    return langCookie.value;\n  }\n\n  // Negotiator expects plain object so we need to transform headers\n  const negotiatorHeaders: Record<string, string> = {};\n  request.headers.forEach((value, key) => (negotiatorHeaders[key] = value));\n\n  // Validate negotiator headers\n  if (!negotiatorHeaders?.['accept-language']) {\n    return 'en';\n  }\n\n  // Use negotiator and intl-localematcher to get best locale\n  let languages = new Negotiator({ headers: negotiatorHeaders })\n    .languages()\n    .filter((lang) => i18n.locales.includes(lang as SupportedLanguage));\n\n  // @ts-ignore locales are readonly\n  const locales: string[] = i18n.locales;\n  return matchLocale(languages, locales, i18n.defaultLocale);\n}\n\nexport function middleware(request: NextRequest) {\n  const pathname = request.nextUrl.pathname;\n\n  if (pathname.startsWith('/api')) {\n    return NextResponse.next();\n  }\n\n  // Public paths that should not be redirected\n  if (\n    [\n      '/logo.png',\n      '/telegram.svg',\n      '/manifest.webmanifest',\n      '/sitemap.xml',\n      '/robots.txt',\n      '/favicon.ico',\n      '/apple-icon.png',\n      '/icon1.png',\n      '/icon2.png',\n      '/images/news.jpg',\n      '/images/collaboration.jpg',\n      '/images/contact.jpg',\n      '/images/events.jpg',\n      '/images/new_students.jpg',\n      '/images/organization.jpg',\n      '/images/event_placeholder.png',\n      '/banner.png',\n      '/banner_mobile.png',\n      '/partners_pattern.svg',\n      '/robo_404.svg',\n      '/robo.500.svg',\n      '/binary.svg',\n      '/ccchaos.svg',\n      '/blob.svg',\n      '/luuppi_banner_text_fi.svg',\n      '/luuppi_banner_text_en.svg',\n      '/kolmiot.svg',\n      '/luuppi-cards.svg',\n      '/luuppi.svg',\n      '/locale-icons/us.svg',\n      '/locale-icons/fi.svg',\n    ].includes(pathname)\n  ) {\n    return NextResponse.next();\n  }\n\n  // Check if there is any supported locale in the pathname\n  const pathnameIsMissingLocale = i18n.locales.every(\n    (locale) =>\n      !pathname.startsWith(`/${locale}/`) && pathname !== `/${locale}`,\n  );\n\n  // Redirect if there is no locale\n  if (pathnameIsMissingLocale) {\n    const locale = getLocale(request);\n\n    const newUrl = new URL(request.url);\n    newUrl.pathname = `/${locale}${pathname}`;\n\n    // e.g. incoming request is /products\n    // The new URL is now /en-US/products\n    return NextResponse.redirect(newUrl);\n  }\n\n  return NextResponse.next();\n}\n\nexport const config = {\n  // Matcher ignoring `/_next/` and `/api/`\n  matcher: ['/((?!_next).*)'],\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAEA;AAAA;AACA;;;;;AAGA,SAAS,UAAU,OAAoB;IACrC,uCAAuC;IACvC,MAAM,aAAa,QAAQ,OAAO,CAAC,GAAG,CAAC;IACvC,IACE,cACA,6HAAA,CAAA,OAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,KAAK,GACtC;QACA,OAAO,WAAW,KAAK;IACzB;IAEA,kEAAkE;IAClE,MAAM,oBAA4C,CAAC;IACnD,QAAQ,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,MAAS,iBAAiB,CAAC,IAAI,GAAG;IAElE,8BAA8B;IAC9B,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,EAAE;QAC3C,OAAO;IACT;IAEA,2DAA2D;IAC3D,IAAI,YAAY,IAAI,2IAAA,CAAA,UAAU,CAAC;QAAE,SAAS;IAAkB,GACzD,SAAS,GACT,MAAM,CAAC,CAAC,OAAS,6HAAA,CAAA,OAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;IAE1C,kCAAkC;IAClC,MAAM,UAAoB,6HAAA,CAAA,OAAI,CAAC,OAAO;IACtC,OAAO,CAAA,GAAA,2LAAA,CAAA,QAAW,AAAD,EAAE,WAAW,SAAS,6HAAA,CAAA,OAAI,CAAC,aAAa;AAC3D;AAEO,SAAS,WAAW,OAAoB;IAC7C,MAAM,WAAW,QAAQ,OAAO,CAAC,QAAQ;IAEzC,IAAI,SAAS,UAAU,CAAC,SAAS;QAC/B,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,6CAA6C;IAC7C,IACE;QACE;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD,CAAC,QAAQ,CAAC,WACX;QACA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,yDAAyD;IACzD,MAAM,0BAA0B,6HAAA,CAAA,OAAI,CAAC,OAAO,CAAC,KAAK,CAChD,CAAC,SACC,CAAC,SAAS,UAAU,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,KAAK,aAAa,CAAC,CAAC,EAAE,QAAQ;IAGpE,iCAAiC;IACjC,IAAI,yBAAyB;QAC3B,MAAM,SAAS,UAAU;QAEzB,MAAM,SAAS,IAAI,IAAI,QAAQ,GAAG;QAClC,OAAO,QAAQ,GAAG,CAAC,CAAC,EAAE,SAAS,UAAU;QAEzC,qCAAqC;QACrC,qCAAqC;QACrC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,yCAAyC;IACzC,SAAS;QAAC;KAAiB;AAC7B"}}]
}