{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hu/Downloads/Compressed/luuppi-next-main4/luuppi-next-main/next/src/libs/db/prisma.ts"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport { PrismaClient } from '@prisma/client';\n\ndeclare global {\n  var prisma: PrismaClient | undefined;\n}\n\nconst prisma = global.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV === 'development') global.prisma = prisma;\n\nexport default prisma;\n"],"names":[],"mappings":"AAAA,iCAAiC;;;AACjC;;AAMA,MAAM,SAAS,OAAO,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEhD,wCAA4C,OAAO,MAAM,GAAG;uCAE7C","debugId":null}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hu/Downloads/Compressed/luuppi-next-main4/luuppi-next-main/next/src/auth.ts"],"sourcesContent":["import jwt from 'jsonwebtoken';\nimport NextAuth from 'next-auth';\nimport AzureB2C from 'next-auth/providers/azure-ad-b2c';\nimport 'server-only';\nimport prisma from './libs/db/prisma';\nimport { logger } from './libs/utils/logger';\n\nexport const {\n  handlers: { GET, POST },\n  auth,\n  signIn,\n  signOut,\n} = NextAuth({\n  providers: [\n    AzureB2C({\n      clientId: process.env.AZURE_P_CLIENT_ID,\n      clientSecret: process.env.AZURE_P_CLIENT_SECRET,\n      authorization: {\n        url: `https://${process.env.AZURE_TENANT_ID}.ciamlogin.com/${process.env.AZURE_TENANT_ID}/oauth2/v2.0/authorize`,\n        params: {\n          code_challenge_method: undefined,\n          code_challenge: undefined,\n        },\n      },\n      issuer: `https://${process.env.AZURE_TENANT_ID}.ciamlogin.com/${process.env.AZURE_TENANT_ID}/v2.0`,\n      token: {\n        url: `https://${process.env.AZURE_TENANT_ID}.ciamlogin.com/${process.env.AZURE_TENANT_ID}/oauth2/v2.0/token`,\n        grant_type: 'authorization_code',\n      },\n    }),\n  ],\n  pages: {\n    error: '/auth/error',\n  },\n  trustHost: true,\n  secret: process.env.NEXTAUTH_SECRET,\n  callbacks: {\n    async session({ session, token }) {\n      if (token) {\n        session.user.entraUserUuid = token.id as string;\n        session.user.isLuuppiHato = token.isLuuppiHato as boolean;\n        session.user.isLuuppiMember = token.isLuuppiMember as boolean;\n        session.user.name = token.username as string;\n      }\n\n      // Forces user to sign in again if token version is outdated.\n      // Useful for forcing users to sign in again after updating token version if\n      // major changes have been made to the token structure.\n      if (!token.version || token.version !== process.env.TOKEN_VERSION) {\n        throw new Error('Token version mismatch');\n      }\n\n      // This should never happen, but just in case\n      if (!session.user.entraUserUuid) {\n        throw new Error('Malformed token');\n      }\n\n      return session;\n    },\n    async jwt({ token, account }) {\n      if (account) {\n        const idToken = account.id_token;\n        if (!idToken) return token;\n        let decoded: null | { email: string; oid: string } = null;\n        try {\n          decoded = jwt.decode(idToken) as { email: string; oid: string };\n        } catch (e) {\n          logger.error('Error decoding JWT', e);\n        }\n        if (!decoded) return token;\n        token.email = decoded.email;\n        token.id = decoded.oid;\n\n        // Update user to local database\n        const localUser = await prisma.user.upsert({\n          where: {\n            entraUserUuid: decoded.oid,\n          },\n          update: {\n            email: decoded.email,\n            roles: {\n              connectOrCreate: {\n                where: {\n                  strapiRoleUuid_entraUserUuid: {\n                    entraUserUuid: decoded.oid,\n                    strapiRoleUuid: process.env.NEXT_PUBLIC_NO_ROLE_ID!,\n                  },\n                },\n                create: {\n                  role: {\n                    connect: {\n                      strapiRoleUuid: process.env.NEXT_PUBLIC_NO_ROLE_ID!,\n                    },\n                  },\n                },\n              },\n            },\n          },\n          create: {\n            entraUserUuid: decoded.oid,\n            email: decoded.email,\n            roles: {\n              create: {\n                role: {\n                  connect: {\n                    strapiRoleUuid: process.env.NEXT_PUBLIC_NO_ROLE_ID!,\n                  },\n                },\n              },\n            },\n          },\n          include: {\n            roles: {\n              include: {\n                role: true,\n              },\n              where: {\n                OR: [\n                  {\n                    expiresAt: {\n                      gte: new Date(),\n                    },\n                  },\n                  {\n                    expiresAt: null,\n                  },\n                ],\n              },\n            },\n          },\n        });\n\n        const hasRole = (roleUuid: string) =>\n          localUser.roles.some((role) => role.role.strapiRoleUuid === roleUuid);\n\n        token.isLuuppiHato = hasRole(process.env.NEXT_PUBLIC_LUUPPI_HATO_ID!);\n        token.isLuuppiMember = hasRole(\n          process.env.NEXT_PUBLIC_LUUPPI_MEMBER_ID!,\n        );\n        token.username = localUser.username;\n        token.version = process.env.TOKEN_VERSION;\n      }\n      return token;\n    },\n  },\n});\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hu/Downloads/Compressed/luuppi-next-main4/luuppi-next-main/next/src/actions/auth.ts"],"sourcesContent":["'use server';\nimport { signIn as authSignIn, signOut as authSignOut } from '@/auth';\nimport { redirect } from 'next/navigation';\n\nexport const signIn = async () => authSignIn('azure-ad-b2c');\nexport const signOut = async () => {\n  await authSignOut({ redirect: false });\n  const logoutUrl = `https://${process.env.AZURE_TENANT_ID}.ciamlogin.com/${process.env.AZURE_TENANT_ID}/oauth2/logout?client_id=${process.env.AZURE_P_CLIENT_ID}&post_logout_redirect_uri=${process.env.NEXT_PUBLIC_BASE_URL}`;\n  redirect(logoutUrl);\n};\n"],"names":[],"mappings":";;;;;;AACA;AACA;AAAA;;;;;;AAEO,MAAM,uCAAI,GAAJ,SAAS,UAAY,CAAA,GAAA,2GAAA,CAAA,SAAU,AAAD,EAAE;AACtC,MAAM,uCAAK,GAAL,UAAU;IACrB,MAAM,CAAA,GAAA,2GAAA,CAAA,UAAW,AAAD,EAAE;QAAE,UAAU;IAAM;IACpC,MAAM,YAAY,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,eAAe,CAAC,eAAe,EAAE,QAAQ,GAAG,CAAC,eAAe,CAAC,yBAAyB,EAAE,QAAQ,GAAG,CAAC,iBAAiB,CAAC,0BAA0B,6DAAoC;IAC7N,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;AACX;;;IALa;IACA;;AADA,+OAAA;AACA,+OAAA","debugId":null}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hu/Downloads/Compressed/luuppi-next-main4/luuppi-next-main/next/src/components/BoardMember/BoardMember.tsx"],"sourcesContent":["import { getStrapiUrl } from '@/libs/strapi/get-strapi-url';\nimport { Dictionary } from '@/models/locale';\nimport Image from 'next/image';\nimport { FaUserAlt } from 'react-icons/fa';\n\ninterface BoardMemberProps {\n  member: any;\n  dictionary: Dictionary;\n  showEmail?: boolean;\n}\n\nexport default function BoardMember({\n  member,\n  dictionary,\n  showEmail,\n}: BoardMemberProps) {\n  return (\n    <div className=\"flex w-full flex-col rounded-lg border border-gray-200 bg-white shadow-lg\">\n      <div className=\"relative aspect-[9/10] w-full rounded-lg bg-gradient-to-r from-secondary-400 to-primary-300\">\n        {member.attributes.image.data?.attributes.url ? (\n          <Image\n            alt={`Picture of ${member.attributes.fullName}`}\n            className=\"rounded-t-lg object-cover object-top\"\n            sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw\"\n            src={getStrapiUrl(member.attributes.image.data.attributes.url)}\n            fill\n          />\n        ) : (\n          <div className=\"flex h-full w-full items-center justify-center\">\n            <FaUserAlt color=\"white\" size={56} />\n          </div>\n        )}\n      </div>\n      <div className=\"flex flex-col gap-2 px-4 py-6\">\n        <h2 className=\"text-xl font-bold max-md:text-base\">\n          {member.attributes.fullName}\n        </h2>\n        <div className=\"flex flex-col items-start\">\n          {member.attributes.boardRoles.data.map((role: any) => (\n            <div\n              key={role.attributes.title}\n              className=\"tooltip flex max-w-full opacity-90\"\n              data-tip={role.attributes.title}\n            >\n              <div className=\"inline-block truncate text-left text-sm font-semibold\">\n                {role.attributes.title}\n              </div>\n            </div>\n          ))}\n        </div>\n        {showEmail && (\n          <div>\n            <h3 className=\"font-semibold\">{dictionary.general.email}</h3>\n            <div className=\"flex flex-col items-start gap-1\">\n              {member.attributes.boardRoles.data.map((role: any) => (\n                <div\n                  key={role.attributes.email}\n                  className=\"tooltip inline-block max-w-full\"\n                  data-tip={role.attributes.email}\n                >\n                  <p key={role.attributes.email} className=\"truncate text-sm\">\n                    <span>{role.attributes.email}</span>\n                  </p>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;;;;;AAQe,SAAS,YAAY,EAClC,MAAM,EACN,UAAU,EACV,SAAS,EACQ;IACjB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACZ,OAAO,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,oBACxC,8OAAC,6HAAA,CAAA,UAAK;oBACJ,KAAK,CAAC,WAAW,EAAE,OAAO,UAAU,CAAC,QAAQ,EAAE;oBAC/C,WAAU;oBACV,OAAM;oBACN,KAAK,CAAA,GAAA,6IAAA,CAAA,eAAY,AAAD,EAAE,OAAO,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG;oBAC7D,IAAI;;;;;yCAGN,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,8IAAA,CAAA,YAAS;wBAAC,OAAM;wBAAQ,MAAM;;;;;;;;;;;;;;;;0BAIrC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCACX,OAAO,UAAU,CAAC,QAAQ;;;;;;kCAE7B,8OAAC;wBAAI,WAAU;kCACZ,OAAO,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,qBACtC,8OAAC;gCAEC,WAAU;gCACV,YAAU,KAAK,UAAU,CAAC,KAAK;0CAE/B,cAAA,8OAAC;oCAAI,WAAU;8CACZ,KAAK,UAAU,CAAC,KAAK;;;;;;+BALnB,KAAK,UAAU,CAAC,KAAK;;;;;;;;;;oBAU/B,2BACC,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CAAiB,WAAW,OAAO,CAAC,KAAK;;;;;;0CACvD,8OAAC;gCAAI,WAAU;0CACZ,OAAO,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,qBACtC,8OAAC;wCAEC,WAAU;wCACV,YAAU,KAAK,UAAU,CAAC,KAAK;kDAE/B,cAAA,8OAAC;4CAA8B,WAAU;sDACvC,cAAA,8OAAC;0DAAM,KAAK,UAAU,CAAC,KAAK;;;;;;2CADtB,KAAK,UAAU,CAAC,KAAK;;;;;uCAJxB,KAAK,UAAU,CAAC,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAe5C","debugId":null}},
    {"offset": {"line": 511, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hu/Downloads/Compressed/luuppi-next-main4/luuppi-next-main/next/src/libs/strapi/flip-locale.ts"],"sourcesContent":["import { SupportedLanguage } from '@/models/locale';\nimport { APIResponseData } from '@/types/types';\nimport 'server-only';\n\n/**\n * Strapi does not support direct localization in a case where we\n * have relations and everything is not localized. Workaround is to\n * populate localizations and then \"flip\" the locale.\n * @param lang 'en' or 'fi'\n * @param data Board members data\n * @returns Board members data with correct locale\n */\nexport const flipBoardLocale = (\n  lang: SupportedLanguage,\n  data: APIResponseData<'api::board.board'>,\n) =>\n  lang === 'en'\n    ? (data.attributes.boardMembers!?.data.map((member) => {\n        const flippedLocales = member.attributes.boardRoles?.data.map(\n          (role: any) => {\n            const localeEn = role.attributes.localizations.data[0];\n            return {\n              ...role,\n              attributes: localeEn.attributes,\n            };\n          },\n        );\n        return {\n          ...member,\n          attributes: {\n            ...member.attributes,\n            boardRoles: {\n              data: flippedLocales,\n            },\n          },\n        };\n      }) as APIResponseData<'api::board-member.board-member'>[])\n    : data.attributes.boardMembers!?.data;\n\n/**\n * Strapi does not support direct localization in a case where we\n * have relations and everything is not localized. Workaround is to\n * populate localizations and then \"flip\" the locale.\n * @param lang 'en' or 'fi'\n * @param data News data\n * @returns News data with correct locale\n */\nexport const flipNewsLocale = (\n  lang: SupportedLanguage,\n  data: APIResponseData<'api::news-single.news-single'>[],\n) =>\n  lang === 'en'\n    ? (\n        data.map((news) => {\n          const localeEn = news.attributes.localizations?.data[0];\n          if (!localeEn) return null;\n          return {\n            ...news,\n            attributes: {\n              ...localeEn?.attributes,\n              banner: news.attributes.banner,\n              authorImage: news.attributes.authorImage,\n              slug: news.attributes.slug,\n              Seo: {\n                ...localeEn?.attributes.Seo,\n              },\n            },\n          };\n        }) as APIResponseData<'api::news-single.news-single'>[]\n      )?.filter((news) => news)\n    : data;\n\n/**\n * Strapi does not support direct localization in a case where we\n * have relations and everything is not localized. Workaround is to\n * populate localizations and then \"flip\" the locale.\n * @param lang 'en' or 'fi'\n * @param data Sanomat data\n * @returns Sanomat data with correct locale\n */\nexport const flipSanomatLocale = (\n  lang: SupportedLanguage,\n  data: APIResponseData<'api::luuppi-sanomat.luuppi-sanomat'>[],\n) =>\n  lang === 'en'\n    ? (\n        data.map((publication) => {\n          const localeEn = publication.attributes.localizations?.data[0];\n          if (!localeEn) return null;\n          return {\n            ...publication,\n            attributes: {\n              ...localeEn?.attributes,\n              id: publication.id,\n              image: publication.attributes.image,\n              pdf: publication.attributes.pdf,\n              Seo: {\n                ...localeEn?.attributes.Seo,\n              },\n            },\n          };\n        }) as APIResponseData<'api::luuppi-sanomat.luuppi-sanomat'>[]\n      )?.filter((publication) => publication)\n    : data;\n"],"names":[],"mappings":";;;;;AAEA;;AAUO,MAAM,kBAAkB,CAC7B,MACA,OAEA,SAAS,OACJ,KAAK,UAAU,CAAC,YAAY,EAAG,KAAK,IAAI,CAAC;QACxC,MAAM,iBAAiB,OAAO,UAAU,CAAC,UAAU,EAAE,KAAK,IACxD,CAAC;YACC,MAAM,WAAW,KAAK,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;YACtD,OAAO;gBACL,GAAG,IAAI;gBACP,YAAY,SAAS,UAAU;YACjC;QACF;QAEF,OAAO;YACL,GAAG,MAAM;YACT,YAAY;gBACV,GAAG,OAAO,UAAU;gBACpB,YAAY;oBACV,MAAM;gBACR;YACF;QACF;IACF,KACA,KAAK,UAAU,CAAC,YAAY,EAAG;AAU9B,MAAM,iBAAiB,CAC5B,MACA,OAEA,SAAS,OAEH,KAAK,GAAG,CAAC,CAAC;QACR,MAAM,WAAW,KAAK,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,EAAE;QACvD,IAAI,CAAC,UAAU,OAAO;QACtB,OAAO;YACL,GAAG,IAAI;YACP,YAAY;gBACV,GAAG,UAAU,UAAU;gBACvB,QAAQ,KAAK,UAAU,CAAC,MAAM;gBAC9B,aAAa,KAAK,UAAU,CAAC,WAAW;gBACxC,MAAM,KAAK,UAAU,CAAC,IAAI;gBAC1B,KAAK;oBACH,GAAG,UAAU,WAAW,GAAG;gBAC7B;YACF;QACF;IACF,IACC,OAAO,CAAC,OAAS,QACpB;AAUC,MAAM,oBAAoB,CAC/B,MACA,OAEA,SAAS,OAEH,KAAK,GAAG,CAAC,CAAC;QACR,MAAM,WAAW,YAAY,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,EAAE;QAC9D,IAAI,CAAC,UAAU,OAAO;QACtB,OAAO;YACL,GAAG,WAAW;YACd,YAAY;gBACV,GAAG,UAAU,UAAU;gBACvB,IAAI,YAAY,EAAE;gBAClB,OAAO,YAAY,UAAU,CAAC,KAAK;gBACnC,KAAK,YAAY,UAAU,CAAC,GAAG;gBAC/B,KAAK;oBACH,GAAG,UAAU,WAAW,GAAG;gBAC7B;YACF;QACF;IACF,IACC,OAAO,CAAC,cAAgB,eAC3B","debugId":null}},
    {"offset": {"line": 574, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hu/Downloads/Compressed/luuppi-next-main4/luuppi-next-main/next/src/libs/strapi/group-board-by-year.ts"],"sourcesContent":["import { APIResponseData } from '@/types/types';\nimport 'server-only';\n\n/**\n * Group board members by year\n * @param data Board members data\n * @returns Board members grouped by year\n */\nexport const groupBoardByYear = (\n  data: APIResponseData<'api::board.board'>[],\n) => {\n  const groupedData = data.reduce(\n    (acc, item) => {\n      const year = item.attributes.year;\n      acc[year] = item;\n      return acc;\n    },\n    {} as Record<string, APIResponseData<'api::board.board'>>,\n  );\n\n  return groupedData;\n};\n"],"names":[],"mappings":";;;AACA;;AAOO,MAAM,mBAAmB,CAC9B;IAEA,MAAM,cAAc,KAAK,MAAM,CAC7B,CAAC,KAAK;QACJ,MAAM,OAAO,KAAK,UAAU,CAAC,IAAI;QACjC,GAAG,CAAC,KAAK,GAAG;QACZ,OAAO;IACT,GACA,CAAC;IAGH,OAAO;AACT","debugId":null}},
    {"offset": {"line": 593, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hu/Downloads/Compressed/luuppi-next-main4/luuppi-next-main/next/src/libs/strapi/blocks-converter.ts"],"sourcesContent":["import { BlocksContent } from '@strapi/blocks-react-renderer';\n\nexport function getPlainText(block: BlocksContent): string {\n  return block\n    .map((node) => {\n      switch (node.type) {\n        case 'heading':\n          return node.children.map((child) =>\n            child.type === 'text' ? child.text : child.url,\n          );\n        case 'code':\n          return node.children.map((child) =>\n            child.type === 'text' ? child.text : child.url,\n          );\n        case 'quote':\n          return node.children.map((child) =>\n            child.type === 'text' ? child.text : child.url,\n          );\n        case 'list':\n          return node.children\n            .map((child) => recursiveListRenderer(child))\n            .flatMap((x) => x);\n        case 'paragraph': {\n          return node.children.map((child) =>\n            child.type === 'text' ? child.text : child.url,\n          );\n        }\n        default:\n          return [];\n      }\n    })\n    .flatMap((x) => x)\n    .join(' ');\n}\n\nfunction recursiveListRenderer(node: any): string[] {\n  if (node.type === 'list-item') {\n    return node.children.map((child: any) =>\n      child.type === 'text' ? child.text : child.url,\n    );\n  }\n\n  return node.children.map((child: any) => recursiveListRenderer(child));\n}\n"],"names":[],"mappings":";;;AAEO,SAAS,aAAa,KAAoB;IAC/C,OAAO,MACJ,GAAG,CAAC,CAAC;QACJ,OAAQ,KAAK,IAAI;YACf,KAAK;gBACH,OAAO,KAAK,QAAQ,CAAC,GAAG,CAAC,CAAC,QACxB,MAAM,IAAI,KAAK,SAAS,MAAM,IAAI,GAAG,MAAM,GAAG;YAElD,KAAK;gBACH,OAAO,KAAK,QAAQ,CAAC,GAAG,CAAC,CAAC,QACxB,MAAM,IAAI,KAAK,SAAS,MAAM,IAAI,GAAG,MAAM,GAAG;YAElD,KAAK;gBACH,OAAO,KAAK,QAAQ,CAAC,GAAG,CAAC,CAAC,QACxB,MAAM,IAAI,KAAK,SAAS,MAAM,IAAI,GAAG,MAAM,GAAG;YAElD,KAAK;gBACH,OAAO,KAAK,QAAQ,CACjB,GAAG,CAAC,CAAC,QAAU,sBAAsB,QACrC,OAAO,CAAC,CAAC,IAAM;YACpB,KAAK;gBAAa;oBAChB,OAAO,KAAK,QAAQ,CAAC,GAAG,CAAC,CAAC,QACxB,MAAM,IAAI,KAAK,SAAS,MAAM,IAAI,GAAG,MAAM,GAAG;gBAElD;YACA;gBACE,OAAO,EAAE;QACb;IACF,GACC,OAAO,CAAC,CAAC,IAAM,GACf,IAAI,CAAC;AACV;AAEA,SAAS,sBAAsB,IAAS;IACtC,IAAI,KAAK,IAAI,KAAK,aAAa;QAC7B,OAAO,KAAK,QAAQ,CAAC,GAAG,CAAC,CAAC,QACxB,MAAM,IAAI,KAAK,SAAS,MAAM,IAAI,GAAG,MAAM,GAAG;IAElD;IAEA,OAAO,KAAK,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAe,sBAAsB;AACjE","debugId":null}},
    {"offset": {"line": 628, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hu/Downloads/Compressed/luuppi-next-main4/luuppi-next-main/next/src/libs/utils/json-ld.ts"],"sourcesContent":["import { Dictionary, SupportedLanguage } from '@/models/locale';\nimport { APIResponse, APIResponseData } from '@/types/types';\nimport {\n  EducationalOrganization,\n  Event as EventSchema,\n  NewsArticle,\n  Person,\n  WithContext,\n} from 'schema-dts';\nimport { getPlainText } from '../strapi/blocks-converter';\nimport { getStrapiUrl } from '../strapi/get-strapi-url';\n\nexport const getOrganizationJsonLd = (dictionary: Dictionary) => {\n  const jsonLd: WithContext<EducationalOrganization> = {\n    '@context': 'https://schema.org',\n    '@type': 'EducationalOrganization',\n    name: 'Luuppi ry',\n    description: dictionary.pages_home.hero.description,\n    openingHours: 'Mo,Tu,We,Th 09:00-15:00',\n    foundingDate: '1969-01-01',\n    url: 'https://luuppi.fi',\n    keywords: 'Luuppi, Luuppi ry, Tampere, Tampereen yliopisto, Ainejärjestö',\n    logo: 'https://luuppi.fi/logo.png',\n    address: {\n      '@type': 'PostalAddress',\n      postalCode: '33100',\n      streetAddress: 'Yliopistonkatu 58b',\n      addressCountry: 'FI',\n      addressLocality: 'Tampere',\n    },\n    vatID: 'FI05123472',\n    contactPoint: {\n      '@type': 'ContactPoint',\n      contactType: dictionary.navigation.board,\n      email: 'hallitus@luuppi.fi',\n      availableLanguage: ['Finnish', 'English'],\n    },\n    sameAs: [\n      'https://www.facebook.com/luuppiry',\n      'https://www.tiktok.com/@luuppiry',\n      'https://www.instagram.com/luuppiry/',\n      'https://www.linkedin.com/company/luuppi-ry',\n      'https://fi.wikipedia.org/wiki/Luuppi_(ainej%C3%A4rjest%C3%B6)',\n      'https://www.linkedin.com/company/luuppi-ry',\n    ],\n    hasMap:\n      'https://www.google.com/maps/d/viewer?mid=1udxC-9jUfnpF5-bZyxiT3SlEcPMRnAh9',\n  };\n\n  return jsonLd;\n};\n\nexport const getEventJsonLd = (\n  event: APIResponse<'api::event.event'>,\n  lang: SupportedLanguage,\n) => {\n  const description = getPlainText(\n    event.data.attributes[lang === 'en' ? 'DescriptionEn' : 'DescriptionFi'],\n  ).slice(0, 300);\n\n  const imageUrlLocalized =\n    lang === 'en' && event.data.attributes.ImageEn?.data?.attributes?.url\n      ? event.data.attributes.ImageEn?.data?.attributes?.url\n      : event.data.attributes.Image?.data?.attributes?.url;\n\n  const jsonLd: WithContext<EventSchema> = {\n    '@context': 'https://schema.org',\n    '@type': 'Event',\n    name: event.data.attributes[lang === 'en' ? 'NameEn' : 'NameFi'],\n    url: `https://luuppi.fi/${lang}/events/${event.data.id}`,\n    startDate: new Date(event.data.attributes.StartDate).toISOString(),\n    endDate: new Date(event.data.attributes.EndDate).toISOString(),\n    description: description.slice(0, 300),\n    image: imageUrlLocalized ? getStrapiUrl(imageUrlLocalized) : undefined,\n    location: {\n      '@type': 'Place',\n      name: event.data.attributes[lang === 'en' ? 'LocationEn' : 'LocationFi'],\n    },\n    eventStatus: 'https://schema.org/EventScheduled',\n    eventAttendanceMode: 'https://schema.org/OfflineEventAttendanceMode',\n    offers: event.data.attributes.Registration?.TicketTypes.map((ticket) => ({\n      '@type': 'Offer',\n      name: lang === 'en' ? ticket.NameEn : ticket.NameFi,\n      price: ticket.Price,\n      priceCurrency: 'EUR',\n      url: `https://luuppi.fi/${lang}/events/${event.data.id}`,\n      validFrom: new Date(event.data.attributes.StartDate).toISOString(),\n      seller: {\n        '@type': 'Organization',\n        name: 'Luuppi ry',\n        url: 'https://luuppi.fi',\n      },\n    })),\n    organizer: {\n      '@type': 'Organization',\n      name: 'Luuppi ry',\n      url: 'https://luuppi.fi',\n      logo: {\n        '@type': 'ImageObject',\n        url: 'https://luuppi.fi/logo.png',\n      },\n    },\n    inLanguage: {\n      '@type': 'Language',\n      name: lang === 'en' ? 'English' : 'Finnish',\n      alternateName: lang === 'en' ? 'en' : 'fi',\n    },\n  };\n\n  return jsonLd;\n};\n\nexport const getNewsJsonLd = (\n  news: APIResponseData<'api::news-single.news-single'>,\n  lang: SupportedLanguage,\n) => {\n  // eslint-disable-next-line no-console\n  const jsonLd: WithContext<NewsArticle> = {\n    '@context': 'https://schema.org',\n    '@type': 'NewsArticle',\n    headline: news.attributes.title,\n    description: news.attributes.description,\n    image: news.attributes.banner?.data?.attributes?.url\n      ? getStrapiUrl(news.attributes.banner.data.attributes.url)\n      : undefined,\n    datePublished: new Date(news.attributes.createdAt!).toISOString(),\n    dateModified: new Date(news.attributes.updatedAt!).toISOString(),\n    publisher: {\n      '@type': 'Organization',\n      name: 'Luuppi ry',\n      logo: {\n        '@type': 'ImageObject',\n        url: 'https://luuppi.fi/logo.png',\n      },\n    },\n    author: {\n      '@type': 'Person',\n      name: news.attributes.authorName,\n      image: news.attributes.authorImage?.data?.attributes?.url\n        ? getStrapiUrl(news.attributes.authorImage.data.attributes.url)\n        : undefined,\n    },\n    inLanguage: {\n      '@type': 'Language',\n      name: lang === 'en' ? 'English' : 'Finnish',\n      alternateName: lang === 'en' ? 'en' : 'fi',\n    },\n  };\n\n  return jsonLd;\n};\n\nexport const getBoardMemberJsonLd = (\n  member: APIResponseData<'api::board-member.board-member'>,\n) => {\n  const jsonLd: WithContext<Person> = {\n    '@context': 'https://schema.org',\n    '@type': 'Person',\n    name: member.attributes?.fullName,\n    email: member.attributes.boardRoles?.data.map(\n      (role: any) => role.attributes.email,\n    ),\n    image: member?.attributes?.image?.data?.attributes?.url\n      ? getStrapiUrl(member.attributes?.image.data.attributes.url)\n      : undefined,\n    jobTitle: member.attributes.boardRoles?.data?.map(\n      (role: any) => role.attributes.title,\n    ),\n    worksFor: {\n      '@type': 'Organization',\n      name: 'Luuppi ry',\n      url: 'https://luuppi.fi',\n    },\n  };\n\n  return jsonLd;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 779, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hu/Downloads/Compressed/luuppi-next-main4/luuppi-next-main/next/src/app/%5Blang%5D/%28content-pages%29/organization/board/page.tsx"],"sourcesContent":["import BoardMember from '@/components/BoardMember/BoardMember';\nimport { getDictionary } from '@/dictionaries';\nimport { flipBoardLocale } from '@/libs/strapi/flip-locale';\nimport { getStrapiData } from '@/libs/strapi/get-strapi-data';\nimport { groupBoardByYear } from '@/libs/strapi/group-board-by-year';\nimport { getBoardMemberJsonLd } from '@/libs/utils/json-ld';\nimport { SupportedLanguage } from '@/models/locale';\nimport { APIResponseCollection } from '@/types/types';\nimport { Metadata } from 'next';\nimport Link from 'next/link';\nimport Script from 'next/script';\n\ninterface BoardProps {\n  params: Promise<{ lang: SupportedLanguage }>;\n}\n\nexport default async function Board(props: BoardProps) {\n  const params = await props.params;\n  const dictionary = await getDictionary(params.lang);\n\n  /**\n   * Localization doesn't matter because we have non i18n\n   * collections (boards, boardMembers) and only boardRoles are localized.\n   * Strapi doesn't support localized queries from non i18n collections. We\n   * use workaround by populating boardRoles with localizations.\n   */\n  const boardData = await getStrapiData<\n    APIResponseCollection<'api::board.board'>\n  >(\n    'fi',\n    '/api/boards?populate[boardMembers][populate][boardRoles][populate]=localizations&populate[boardMembers][populate]=image',\n    ['board', 'board-role', 'board-member'],\n  );\n\n  const boardGroupedByYear = groupBoardByYear(boardData.data);\n  const boardSortedByYear = Object.keys(boardGroupedByYear).sort(\n    (a, b) => Number(b) - Number(a),\n  );\n  const latestBoard = boardGroupedByYear[boardSortedByYear[0]];\n  const otherBoards = boardSortedByYear.filter(\n    (year) => parseInt(year, 10) !== latestBoard.attributes.year,\n  );\n\n  const boardLanguageFlipped = flipBoardLocale(params.lang, latestBoard);\n\n  const boardMembers = boardLanguageFlipped.filter(\n    (member: any) => member.attributes.isBoardMember === true,\n  );\n  const officials = boardLanguageFlipped.filter(\n    (member: any) => member.attributes.isBoardMember === false,\n  );\n\n  const boardMembersJsonLd = boardMembers.map((member: any) =>\n    getBoardMemberJsonLd(member),\n  );\n\n  return (\n    <>\n      <Script\n        dangerouslySetInnerHTML={{ __html: JSON.stringify(boardMembersJsonLd) }}\n        id=\"board-members-jsonld\"\n        type=\"application/ld+json\"\n      />\n      <div className=\"relative flex flex-col gap-12\">\n        <div className=\"flex items-center justify-between max-sm:flex-col max-sm:items-start max-sm:gap-2\">\n          <h1>\n            {dictionary.navigation.board} {latestBoard.attributes.year}\n          </h1>\n          {Boolean(otherBoards.length) && (\n            <div className=\"dropdown sm:dropdown-end\">\n              <div className=\"btn m-1\" role=\"button\" tabIndex={0}>\n                {dictionary.pages_board.other_boards}\n              </div>\n              <ul\n                className=\"menu dropdown-content z-[9999] grid w-80 grid-cols-4 gap-2 rounded-box bg-base-100 p-2 shadow\"\n                tabIndex={0}\n              >\n                {otherBoards.map((year) => (\n                  <li key={year}>\n                    <Link href={`/${params.lang}/organization/board/${year}`}>\n                      {year}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n        <div>\n          {Boolean(boardMembers.length) && (\n            <>\n              <h2 className=\"mb-6 text-3xl font-bold max-md:text-2xl\">\n                {dictionary.pages_board.board_members}\n              </h2>\n              <div className=\"grid grid-cols-2 gap-x-4 gap-y-6 md:grid-cols-3 md:gap-y-12 lg:grid-cols-4\">\n                {boardMembers.map((member: any) => (\n                  <BoardMember\n                    key={member.attributes.createdAt}\n                    dictionary={dictionary}\n                    member={member}\n                    showEmail={true}\n                  />\n                ))}\n              </div>\n            </>\n          )}\n        </div>\n        <div>\n          {Boolean(officials.length) && (\n            <>\n              <h2 className=\"mb-6 text-3xl font-bold max-md:text-2xl\">\n                {dictionary.pages_board.officials}\n              </h2>\n              <div className=\"grid grid-cols-2 gap-x-4 gap-y-6 md:grid-cols-3 md:gap-y-12 lg:grid-cols-4\">\n                {officials.map((member: any) => (\n                  <BoardMember\n                    key={member.attributes.createdAt}\n                    dictionary={dictionary}\n                    member={member}\n                    showEmail={true}\n                  />\n                ))}\n              </div>\n            </>\n          )}\n        </div>\n        <div className=\"luuppi-pattern absolute -left-48 -top-10 -z-50 h-[701px] w-[801px] max-md:left-0 max-md:h-full max-md:w-full max-md:rounded-none\" />\n      </div>\n    </>\n  );\n}\n\nexport async function generateMetadata(props: BoardProps): Promise<Metadata> {\n  const params = await props.params;\n  const dictionary = await getDictionary(params.lang);\n\n  const boardData = await getStrapiData<\n    APIResponseCollection<'api::board.board'>\n  >(\n    'fi',\n    '/api/boards?populate[boardMembers][populate][boardRoles][populate]=localizations&populate[boardMembers][populate]=image',\n    ['board', 'board-role', 'board-member'],\n  );\n\n  const boardGroupedByYear = groupBoardByYear(boardData.data);\n  const boardSortedByYear = Object.keys(boardGroupedByYear).sort(\n    (a, b) => Number(b) - Number(a),\n  );\n  const latestBoard = boardGroupedByYear[boardSortedByYear[0]];\n\n  const pathname = `/${params.lang}/organization/board`;\n\n  return {\n    title: `${dictionary.navigation.board} ${latestBoard.attributes.year} | Luuppi ry`,\n    description: `${dictionary.pages_board.seo_description} ${latestBoard.attributes.year}`,\n    alternates: {\n      canonical: pathname,\n      languages: {\n        fi: `/fi${pathname.slice(3)}`,\n        en: `/en${pathname.slice(3)}`,\n      },\n    },\n    openGraph: {\n      title: `${dictionary.navigation.board} ${latestBoard.attributes.year}`,\n      description: `${dictionary.pages_board.seo_description} ${latestBoard.attributes.year}`,\n      url: pathname,\n      siteName: 'Luuppi ry',\n    },\n    twitter: {\n      title: `${dictionary.navigation.board} ${latestBoard.attributes.year}`,\n      description: `${dictionary.pages_board.seo_description} ${latestBoard.attributes.year}`,\n    },\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}