{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hu/Downloads/Compressed/luuppi-next-main4/luuppi-next-main/next/src/components/Songbook/Songbook.tsx"],"sourcesContent":["'use client';\nimport { Dictionary } from '@/models/locale';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { BiSearch } from 'react-icons/bi';\nimport { MdClear } from 'react-icons/md';\n\n// TODO: Should come from the backend\nconst CATEGORIES = [\n  'Luuppi',\n  'Isänmaa',\n  'Politiikka',\n  'Alkoholi',\n  'Sitsit',\n  'Juomalaulu',\n  'Kotimaa',\n  'Ulkomaat',\n  'Lasten leikki',\n  'Pakanajuhla',\n  'Happo XXX K-18',\n] as const;\n\ninterface SongbookProps {\n  dictionary: Dictionary;\n}\n\ninterface SongbookSong {\n  title: string;\n  verses: string[];\n}\n\ninterface FetchResponse {\n  songs: SongbookSong[];\n  totalCount: number;\n  hasMore: boolean;\n}\n\nexport default function Songbook({ dictionary }: SongbookProps) {\n  const [songs, setSongs] = useState<SongbookSong[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [page, setPage] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n  const [search, setSearch] = useState('');\n  const [category, setCategory] = useState('');\n  const [expandedSong, setExpandedSong] = useState<string | null>(null);\n  const [debouncedSearch, setDebouncedSearch] = useState('');\n  const [manuallyCollapsed, setManuallyCollapsed] = useState<Set<string>>(\n    new Set(),\n  );\n  const isFetchingRef = useRef(false);\n  const loadingRef = useRef(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedSearch(search);\n      if (search !== debouncedSearch) {\n        setPage(0);\n        setSongs([]);\n        setHasMore(true);\n        isFetchingRef.current = false;\n      }\n    }, 300);\n\n    return () => clearTimeout(timer);\n  }, [search, debouncedSearch]);\n\n  useEffect(() => {\n    if (debouncedSearch !== search) return;\n    if (loadingRef.current || isFetchingRef.current) return;\n\n    const fetchSongs = async () => {\n      try {\n        loadingRef.current = true;\n        isFetchingRef.current = true;\n        setLoading(true);\n        setError('');\n\n        const params = new URLSearchParams({\n          page: page.toString(),\n          pageSize: '20',\n          ...(debouncedSearch && { q: debouncedSearch.trim() }),\n          ...(category && { category: category.trim() }),\n        });\n\n        const response = await fetch(`/api/songbook?${params}`);\n        if (!response.ok) throw new Error('Failed to fetch songs');\n\n        const data: FetchResponse = await response.json();\n\n        setSongs((prev) =>\n          page === 0 ? data.songs : [...prev, ...data.songs],\n        );\n        setHasMore(data.hasMore);\n        if (data.hasMore && page === 0) {\n          setPage(1);\n        }\n      } catch (err) {\n        setError(dictionary.general.error);\n      } finally {\n        setLoading(false);\n        isFetchingRef.current = false;\n        loadingRef.current = false;\n      }\n    };\n\n    if (page === 0) {\n      setSongs([]);\n      setHasMore(true);\n    }\n\n    fetchSongs();\n\n    return () => {\n      loadingRef.current = false;\n      isFetchingRef.current = false;\n    };\n  }, [page, debouncedSearch, category, search, dictionary.general.error]);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        if (\n          entries[0].isIntersecting &&\n          !loadingRef.current &&\n          !isFetchingRef.current &&\n          hasMore &&\n          page > 0\n        ) {\n          setPage((prev) => prev + 1);\n        }\n      },\n      { threshold: 0.1 },\n    );\n\n    const sentinel = document.getElementById('scroll-sentinel');\n    if (sentinel) {\n      observer.observe(sentinel);\n    }\n\n    return () => observer.disconnect();\n  }, [hasMore, page]);\n\n  const shouldExpandSong = useCallback(\n    (song: SongbookSong, searchTerm: string): boolean => {\n      if (!searchTerm) return false;\n      return song.verses.some((verse) =>\n        verse.toLowerCase().includes(searchTerm.toLowerCase()),\n      );\n    },\n    [],\n  );\n\n  useEffect(() => {\n    if (debouncedSearch) {\n      const matchingSongs = songs\n        .filter((song) => shouldExpandSong(song, debouncedSearch))\n        .map((song) => song.title);\n      setExpandedSong(matchingSongs.length === 1 ? matchingSongs[0] : null);\n      setManuallyCollapsed(new Set());\n    } else {\n      setExpandedSong(null);\n      setManuallyCollapsed(new Set());\n    }\n  }, [songs, debouncedSearch, shouldExpandSong]);\n\n  const highlightText = (text: string, searchTerm: string) => {\n    if (!searchTerm) return text;\n    const parts = text.split(new RegExp(`(${searchTerm})`, 'gi'));\n    return (\n      <>\n        {parts.map((part, i) =>\n          part.toLowerCase() === searchTerm.toLowerCase() ? (\n            <mark key={i} className=\"rounded bg-primary-200 px-1\">\n              {part}\n            </mark>\n          ) : (\n            part\n          ),\n        )}\n      </>\n    );\n  };\n\n  const handleReset = useCallback(() => {\n    setSearch('');\n    setCategory('');\n    setPage(0);\n    setSongs([]);\n    setHasMore(true);\n    loadingRef.current = false;\n    isFetchingRef.current = false;\n  }, []);\n\n  const groupSongsByCategory = (songs: SongbookSong[]) => {\n    const groupedSongs = songs.reduce(\n      (acc, song) => {\n        const categoryMatch = song.title.match(/^\\d+\\./);\n        const categoryNum = categoryMatch ? parseInt(categoryMatch[0]) : 0;\n        let category = 'Muu';\n\n        if (categoryNum >= 1 && categoryNum <= 100) category = 'Luuppi';\n        else if (categoryNum >= 101 && categoryNum <= 200) category = 'Isänmaa';\n        else if (categoryNum >= 201 && categoryNum <= 300)\n          category = 'Politiikka';\n        else if (categoryNum >= 301 && categoryNum <= 400)\n          category = 'Alkoholi';\n        else if (categoryNum >= 401 && categoryNum <= 500) category = 'Sitsit';\n        else if (categoryNum >= 501 && categoryNum <= 600)\n          category = 'Juomalaulu';\n        else if (categoryNum >= 601 && categoryNum <= 700) category = 'Kotimaa';\n        else if (categoryNum >= 701 && categoryNum <= 800)\n          category = 'Ulkomaat';\n        else if (categoryNum >= 801 && categoryNum <= 900)\n          category = 'Lasten leikki';\n        else if (categoryNum >= 901 && categoryNum <= 1000)\n          category = 'Pakanajuhla';\n        else if (categoryNum >= 1001) category = 'Happo XXX K-18';\n\n        if (!acc[category]) {\n          acc[category] = [];\n        }\n        acc[category].push(song);\n        return acc;\n      },\n      {} as Record<string, typeof songs>,\n    );\n    return groupedSongs;\n  };\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"flex w-full items-center justify-between rounded-lg bg-background-50 p-4 max-md:flex-col max-md:justify-center max-md:gap-4 max-md:px-2\">\n        <div className=\"flex w-full items-center gap-4 max-md:flex-col max-md:gap-2\">\n          <div className=\"relative w-full\">\n            <input\n              className=\"input input-bordered w-full pl-10 text-base\"\n              placeholder={dictionary.general.search + '...'}\n              type=\"text\"\n              value={search}\n              onChange={(e) => setSearch(e.target.value)}\n            />\n            <BiSearch\n              className=\"absolute left-3 top-3 text-gray-400\"\n              size={24}\n            />\n          </div>\n\n          <div className=\"flex w-full items-center gap-2\">\n            <select\n              className=\"select select-bordered w-full text-base max-md:w-full\"\n              value={category}\n              onChange={(e) => {\n                setCategory(e.target.value);\n                setPage(0);\n                setSongs([]);\n                setHasMore(true);\n              }}\n            >\n              <option value=\"\">{dictionary.general.all_categories}</option>\n              {CATEGORIES.map((cat) => (\n                <option key={cat} value={cat}>\n                  {cat}\n                </option>\n              ))}\n            </select>\n\n            {(search || category) && (\n              <button\n                className=\"btn btn-square btn-ghost\"\n                type=\"button\"\n                onClick={handleReset}\n              >\n                <MdClear size={24} />\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {error && <div className=\"alert alert-error mb-3 sm:mb-4\">{error}</div>}\n\n      <div className=\"mt-8 flex flex-col gap-12\">\n        {Object.entries(groupSongsByCategory(songs))\n          .filter(\n            ([cat]) =>\n              !category || cat.toLowerCase() === category.toLowerCase(),\n          )\n          .map(([categoryName, categorySongs]) => (\n            <div key={categoryName} className=\"flex flex-col gap-2\">\n              <h2 className=\"text-xl font-bold\">{categoryName}</h2>\n              <div className=\"flex flex-col gap-3 sm:gap-4\">\n                {categorySongs.map((song, index) => (\n                  <div\n                    key={index}\n                    className=\"flex rounded-lg bg-background-50 transition-all\"\n                  >\n                    <span className=\"w-1 shrink-0 rounded-l-lg bg-secondary-400\" />\n                    <div className=\"card-body flex-1 p-3 sm:p-4\">\n                      <button\n                        className=\"w-full text-left\"\n                        onClick={() => {\n                          if (shouldExpandSong(song, debouncedSearch)) {\n                            setManuallyCollapsed((prev) => {\n                              const next = new Set(prev);\n                              if (next.has(song.title)) {\n                                next.delete(song.title);\n                              } else {\n                                next.add(song.title);\n                              }\n                              return next;\n                            });\n                          } else {\n                            setExpandedSong(\n                              expandedSong === song.title ? null : song.title,\n                            );\n                          }\n                        }}\n                      >\n                        <h3 className=\"text-base font-bold sm:text-lg\">\n                          {highlightText(song.title, debouncedSearch)}\n                        </h3>\n                      </button>\n                      {(expandedSong === song.title ||\n                        (shouldExpandSong(song, debouncedSearch) &&\n                          !manuallyCollapsed.has(song.title))) && (\n                        <div className=\"mt-3 space-y-3 sm:mt-4 sm:space-y-4\">\n                          {song.verses.map((verse, vIndex) => (\n                            <p\n                              key={vIndex}\n                              className=\"whitespace-pre-line text-xs sm:text-sm\"\n                            >\n                              {highlightText(verse, debouncedSearch)}\n                            </p>\n                          ))}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n\n        {loading && (\n          <div className=\"space-y-4\">\n            {[...Array(3)].map((_, i) => (\n              <div key={i} className=\"card animate-pulse bg-base-100 shadow-lg\">\n                <div className=\"card-body p-4\">\n                  <div className=\"h-6 w-2/3 rounded bg-gray-200\" />\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        <div className=\"h-4 w-full\" id=\"scroll-sentinel\" />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}