{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hu/Downloads/Compressed/luuppi-next-main4/luuppi-next-main/next/src/libs/db/prisma.ts"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport { PrismaClient } from '@prisma/client';\n\ndeclare global {\n  var prisma: PrismaClient | undefined;\n}\n\nconst prisma = global.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV === 'development') global.prisma = prisma;\n\nexport default prisma;\n"],"names":[],"mappings":"AAAA,iCAAiC;;;AACjC;;AAMA,MAAM,SAAS,OAAO,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEhD,wCAA4C,OAAO,MAAM,GAAG;uCAE7C","debugId":null}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hu/Downloads/Compressed/luuppi-next-main4/luuppi-next-main/next/src/auth.ts"],"sourcesContent":["import jwt from 'jsonwebtoken';\nimport NextAuth from 'next-auth';\nimport AzureB2C from 'next-auth/providers/azure-ad-b2c';\nimport 'server-only';\nimport prisma from './libs/db/prisma';\nimport { logger } from './libs/utils/logger';\n\nexport const {\n  handlers: { GET, POST },\n  auth,\n  signIn,\n  signOut,\n} = NextAuth({\n  providers: [\n    AzureB2C({\n      clientId: process.env.AZURE_P_CLIENT_ID,\n      clientSecret: process.env.AZURE_P_CLIENT_SECRET,\n      authorization: {\n        url: `https://${process.env.AZURE_TENANT_ID}.ciamlogin.com/${process.env.AZURE_TENANT_ID}/oauth2/v2.0/authorize`,\n        params: {\n          code_challenge_method: undefined,\n          code_challenge: undefined,\n        },\n      },\n      issuer: `https://${process.env.AZURE_TENANT_ID}.ciamlogin.com/${process.env.AZURE_TENANT_ID}/v2.0`,\n      token: {\n        url: `https://${process.env.AZURE_TENANT_ID}.ciamlogin.com/${process.env.AZURE_TENANT_ID}/oauth2/v2.0/token`,\n        grant_type: 'authorization_code',\n      },\n    }),\n  ],\n  pages: {\n    error: '/auth/error',\n  },\n  trustHost: true,\n  secret: process.env.NEXTAUTH_SECRET,\n  callbacks: {\n    async session({ session, token }) {\n      if (token) {\n        session.user.entraUserUuid = token.id as string;\n        session.user.isLuuppiHato = token.isLuuppiHato as boolean;\n        session.user.isLuuppiMember = token.isLuuppiMember as boolean;\n        session.user.name = token.username as string;\n      }\n\n      // Forces user to sign in again if token version is outdated.\n      // Useful for forcing users to sign in again after updating token version if\n      // major changes have been made to the token structure.\n      if (!token.version || token.version !== process.env.TOKEN_VERSION) {\n        throw new Error('Token version mismatch');\n      }\n\n      // This should never happen, but just in case\n      if (!session.user.entraUserUuid) {\n        throw new Error('Malformed token');\n      }\n\n      return session;\n    },\n    async jwt({ token, account }) {\n      if (account) {\n        const idToken = account.id_token;\n        if (!idToken) return token;\n        let decoded: null | { email: string; oid: string } = null;\n        try {\n          decoded = jwt.decode(idToken) as { email: string; oid: string };\n        } catch (e) {\n          logger.error('Error decoding JWT', e);\n        }\n        if (!decoded) return token;\n        token.email = decoded.email;\n        token.id = decoded.oid;\n\n        // Update user to local database\n        const localUser = await prisma.user.upsert({\n          where: {\n            entraUserUuid: decoded.oid,\n          },\n          update: {\n            email: decoded.email,\n            roles: {\n              connectOrCreate: {\n                where: {\n                  strapiRoleUuid_entraUserUuid: {\n                    entraUserUuid: decoded.oid,\n                    strapiRoleUuid: process.env.NEXT_PUBLIC_NO_ROLE_ID!,\n                  },\n                },\n                create: {\n                  role: {\n                    connect: {\n                      strapiRoleUuid: process.env.NEXT_PUBLIC_NO_ROLE_ID!,\n                    },\n                  },\n                },\n              },\n            },\n          },\n          create: {\n            entraUserUuid: decoded.oid,\n            email: decoded.email,\n            roles: {\n              create: {\n                role: {\n                  connect: {\n                    strapiRoleUuid: process.env.NEXT_PUBLIC_NO_ROLE_ID!,\n                  },\n                },\n              },\n            },\n          },\n          include: {\n            roles: {\n              include: {\n                role: true,\n              },\n              where: {\n                OR: [\n                  {\n                    expiresAt: {\n                      gte: new Date(),\n                    },\n                  },\n                  {\n                    expiresAt: null,\n                  },\n                ],\n              },\n            },\n          },\n        });\n\n        const hasRole = (roleUuid: string) =>\n          localUser.roles.some((role) => role.role.strapiRoleUuid === roleUuid);\n\n        token.isLuuppiHato = hasRole(process.env.NEXT_PUBLIC_LUUPPI_HATO_ID!);\n        token.isLuuppiMember = hasRole(\n          process.env.NEXT_PUBLIC_LUUPPI_MEMBER_ID!,\n        );\n        token.username = localUser.username;\n        token.version = process.env.TOKEN_VERSION;\n      }\n      return token;\n    },\n  },\n});\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hu/Downloads/Compressed/luuppi-next-main4/luuppi-next-main/next/src/actions/auth.ts"],"sourcesContent":["'use server';\nimport { signIn as authSignIn, signOut as authSignOut } from '@/auth';\nimport { redirect } from 'next/navigation';\n\nexport const signIn = async () => authSignIn('azure-ad-b2c');\nexport const signOut = async () => {\n  await authSignOut({ redirect: false });\n  const logoutUrl = `https://${process.env.AZURE_TENANT_ID}.ciamlogin.com/${process.env.AZURE_TENANT_ID}/oauth2/logout?client_id=${process.env.AZURE_P_CLIENT_ID}&post_logout_redirect_uri=${process.env.NEXT_PUBLIC_BASE_URL}`;\n  redirect(logoutUrl);\n};\n"],"names":[],"mappings":";;;;;;AACA;AACA;AAAA;;;;;;AAEO,MAAM,uCAAI,GAAJ,SAAS,UAAY,CAAA,GAAA,2GAAA,CAAA,SAAU,AAAD,EAAE;AACtC,MAAM,uCAAK,GAAL,UAAU;IACrB,MAAM,CAAA,GAAA,2GAAA,CAAA,UAAW,AAAD,EAAE;QAAE,UAAU;IAAM;IACpC,MAAM,YAAY,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,eAAe,CAAC,eAAe,EAAE,QAAQ,GAAG,CAAC,eAAe,CAAC,yBAAyB,EAAE,QAAQ,GAAG,CAAC,iBAAiB,CAAC,0BAA0B,6DAAoC;IAC7N,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;AACX;;;IALa;IACA;;AADA,+OAAA;AACA,+OAAA","debugId":null}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hu/Downloads/Compressed/luuppi-next-main4/luuppi-next-main/next/src/libs/strapi/flip-locale.ts"],"sourcesContent":["import { SupportedLanguage } from '@/models/locale';\nimport { APIResponseData } from '@/types/types';\nimport 'server-only';\n\n/**\n * Strapi does not support direct localization in a case where we\n * have relations and everything is not localized. Workaround is to\n * populate localizations and then \"flip\" the locale.\n * @param lang 'en' or 'fi'\n * @param data Board members data\n * @returns Board members data with correct locale\n */\nexport const flipBoardLocale = (\n  lang: SupportedLanguage,\n  data: APIResponseData<'api::board.board'>,\n) =>\n  lang === 'en'\n    ? (data.attributes.boardMembers!?.data.map((member) => {\n        const flippedLocales = member.attributes.boardRoles?.data.map(\n          (role: any) => {\n            const localeEn = role.attributes.localizations.data[0];\n            return {\n              ...role,\n              attributes: localeEn.attributes,\n            };\n          },\n        );\n        return {\n          ...member,\n          attributes: {\n            ...member.attributes,\n            boardRoles: {\n              data: flippedLocales,\n            },\n          },\n        };\n      }) as APIResponseData<'api::board-member.board-member'>[])\n    : data.attributes.boardMembers!?.data;\n\n/**\n * Strapi does not support direct localization in a case where we\n * have relations and everything is not localized. Workaround is to\n * populate localizations and then \"flip\" the locale.\n * @param lang 'en' or 'fi'\n * @param data News data\n * @returns News data with correct locale\n */\nexport const flipNewsLocale = (\n  lang: SupportedLanguage,\n  data: APIResponseData<'api::news-single.news-single'>[],\n) =>\n  lang === 'en'\n    ? (\n        data.map((news) => {\n          const localeEn = news.attributes.localizations?.data[0];\n          if (!localeEn) return null;\n          return {\n            ...news,\n            attributes: {\n              ...localeEn?.attributes,\n              banner: news.attributes.banner,\n              authorImage: news.attributes.authorImage,\n              slug: news.attributes.slug,\n              Seo: {\n                ...localeEn?.attributes.Seo,\n              },\n            },\n          };\n        }) as APIResponseData<'api::news-single.news-single'>[]\n      )?.filter((news) => news)\n    : data;\n\n/**\n * Strapi does not support direct localization in a case where we\n * have relations and everything is not localized. Workaround is to\n * populate localizations and then \"flip\" the locale.\n * @param lang 'en' or 'fi'\n * @param data Sanomat data\n * @returns Sanomat data with correct locale\n */\nexport const flipSanomatLocale = (\n  lang: SupportedLanguage,\n  data: APIResponseData<'api::luuppi-sanomat.luuppi-sanomat'>[],\n) =>\n  lang === 'en'\n    ? (\n        data.map((publication) => {\n          const localeEn = publication.attributes.localizations?.data[0];\n          if (!localeEn) return null;\n          return {\n            ...publication,\n            attributes: {\n              ...localeEn?.attributes,\n              id: publication.id,\n              image: publication.attributes.image,\n              pdf: publication.attributes.pdf,\n              Seo: {\n                ...localeEn?.attributes.Seo,\n              },\n            },\n          };\n        }) as APIResponseData<'api::luuppi-sanomat.luuppi-sanomat'>[]\n      )?.filter((publication) => publication)\n    : data;\n"],"names":[],"mappings":";;;;;AAEA;;AAUO,MAAM,kBAAkB,CAC7B,MACA,OAEA,SAAS,OACJ,KAAK,UAAU,CAAC,YAAY,EAAG,KAAK,IAAI,CAAC;QACxC,MAAM,iBAAiB,OAAO,UAAU,CAAC,UAAU,EAAE,KAAK,IACxD,CAAC;YACC,MAAM,WAAW,KAAK,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;YACtD,OAAO;gBACL,GAAG,IAAI;gBACP,YAAY,SAAS,UAAU;YACjC;QACF;QAEF,OAAO;YACL,GAAG,MAAM;YACT,YAAY;gBACV,GAAG,OAAO,UAAU;gBACpB,YAAY;oBACV,MAAM;gBACR;YACF;QACF;IACF,KACA,KAAK,UAAU,CAAC,YAAY,EAAG;AAU9B,MAAM,iBAAiB,CAC5B,MACA,OAEA,SAAS,OAEH,KAAK,GAAG,CAAC,CAAC;QACR,MAAM,WAAW,KAAK,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,EAAE;QACvD,IAAI,CAAC,UAAU,OAAO;QACtB,OAAO;YACL,GAAG,IAAI;YACP,YAAY;gBACV,GAAG,UAAU,UAAU;gBACvB,QAAQ,KAAK,UAAU,CAAC,MAAM;gBAC9B,aAAa,KAAK,UAAU,CAAC,WAAW;gBACxC,MAAM,KAAK,UAAU,CAAC,IAAI;gBAC1B,KAAK;oBACH,GAAG,UAAU,WAAW,GAAG;gBAC7B;YACF;QACF;IACF,IACC,OAAO,CAAC,OAAS,QACpB;AAUC,MAAM,oBAAoB,CAC/B,MACA,OAEA,SAAS,OAEH,KAAK,GAAG,CAAC,CAAC;QACR,MAAM,WAAW,YAAY,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,EAAE;QAC9D,IAAI,CAAC,UAAU,OAAO;QACtB,OAAO;YACL,GAAG,WAAW;YACd,YAAY;gBACV,GAAG,UAAU,UAAU;gBACvB,IAAI,YAAY,EAAE;gBAClB,OAAO,YAAY,UAAU,CAAC,KAAK;gBACnC,KAAK,YAAY,UAAU,CAAC,GAAG;gBAC/B,KAAK;oBACH,GAAG,UAAU,WAAW,GAAG;gBAC7B;YACF;QACF;IACF,IACC,OAAO,CAAC,cAAgB,eAC3B","debugId":null}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hu/Downloads/Compressed/luuppi-next-main4/luuppi-next-main/next/src/libs/strapi/format-metadata.ts"],"sourcesContent":["import { Metadata } from 'next';\nimport 'server-only';\n\n/**\n * Takes \"content page\"'s Seo data and pathname and returns formatted metadata\n * that can be used in the head of the page.\n * @param content content page data\n * @param pathname current page's pathname\n * @returns formatted metadata\n */\nexport const formatMetadata = (\n  content: any,\n  pathname: string,\n  isNews = false,\n): Metadata => {\n  const seo = content.data.attributes.Seo;\n\n  if (!seo) throw new Error('No SEO data found');\n\n  const cmsUrl = process.env.NEXT_PUBLIC_STRAPI_BASE_URL;\n\n  let twitterImage: string | null = null;\n  if (seo.twitter?.twitterImage?.data?.attributes?.url) {\n    twitterImage = `${cmsUrl}${seo.twitter.twitterImage.data.attributes.url}`;\n  }\n  let openGraphImage: string | null = null;\n  if (seo.openGraph?.openGraphImage?.data?.attributes?.url) {\n    openGraphImage = `${cmsUrl}${seo.openGraph.openGraphImage.data.attributes.url}`;\n  }\n\n  if (isNews && !openGraphImage) {\n    const ogUrl = new URL('https://luuppi-opengraph.vercel.app/api/og');\n    ogUrl.searchParams.append('author', seo.metaAuthor ?? 'Luuppi ry');\n    ogUrl.searchParams.append('title', seo.metaTitle);\n    ogUrl.searchParams.append(\n      'published',\n      seo.publishedAt ?? new Date().toISOString(),\n    );\n    ogUrl.searchParams.append('image', 'https://i.pravatar.cc/300');\n  }\n\n  return {\n    title: `${seo.metaTitle} | Luuppi ry`,\n    description: seo.metaDescription,\n    authors: {\n      name: seo.metaAuthor,\n    },\n    keywords: seo.metaKeywords,\n    alternates: {\n      canonical: pathname,\n      languages: {\n        tr: `/tr${pathname.slice(3)}`,\n        en: `/en${pathname.slice(3)}`,\n      },\n    },\n    openGraph: {\n      title: seo.openGraph.openGraphTitle,\n      description: seo.openGraph.openGraphDescription,\n      url: pathname,\n      images: openGraphImage ? [openGraphImage] : undefined,\n      siteName: 'Luuppi ry',\n    },\n    twitter: {\n      title: seo.twitter.twitterTitle,\n      description: seo.twitter.twitterDescription,\n      card: 'summary_large_image',\n      images: twitterImage ? [twitterImage] : undefined,\n    },\n  };\n};\n"],"names":[],"mappings":";;;AACA;;AASO,MAAM,iBAAiB,CAC5B,SACA,UACA,SAAS,KAAK;IAEd,MAAM,MAAM,QAAQ,IAAI,CAAC,UAAU,CAAC,GAAG;IAEvC,IAAI,CAAC,KAAK,MAAM,IAAI,MAAM;IAE1B,MAAM;IAEN,IAAI,eAA8B;IAClC,IAAI,IAAI,OAAO,EAAE,cAAc,MAAM,YAAY,KAAK;QACpD,eAAe,GAAG,SAAS,IAAI,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE;IAC3E;IACA,IAAI,iBAAgC;IACpC,IAAI,IAAI,SAAS,EAAE,gBAAgB,MAAM,YAAY,KAAK;QACxD,iBAAiB,GAAG,SAAS,IAAI,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE;IACjF;IAEA,IAAI,UAAU,CAAC,gBAAgB;QAC7B,MAAM,QAAQ,IAAI,IAAI;QACtB,MAAM,YAAY,CAAC,MAAM,CAAC,UAAU,IAAI,UAAU,IAAI;QACtD,MAAM,YAAY,CAAC,MAAM,CAAC,SAAS,IAAI,SAAS;QAChD,MAAM,YAAY,CAAC,MAAM,CACvB,aACA,IAAI,WAAW,IAAI,IAAI,OAAO,WAAW;QAE3C,MAAM,YAAY,CAAC,MAAM,CAAC,SAAS;IACrC;IAEA,OAAO;QACL,OAAO,GAAG,IAAI,SAAS,CAAC,YAAY,CAAC;QACrC,aAAa,IAAI,eAAe;QAChC,SAAS;YACP,MAAM,IAAI,UAAU;QACtB;QACA,UAAU,IAAI,YAAY;QAC1B,YAAY;YACV,WAAW;YACX,WAAW;gBACT,IAAI,CAAC,GAAG,EAAE,SAAS,KAAK,CAAC,IAAI;gBAC7B,IAAI,CAAC,GAAG,EAAE,SAAS,KAAK,CAAC,IAAI;YAC/B;QACF;QACA,WAAW;YACT,OAAO,IAAI,SAAS,CAAC,cAAc;YACnC,aAAa,IAAI,SAAS,CAAC,oBAAoB;YAC/C,KAAK;YACL,QAAQ,iBAAiB;gBAAC;aAAe,GAAG;YAC5C,UAAU;QACZ;QACA,SAAS;YACP,OAAO,IAAI,OAAO,CAAC,YAAY;YAC/B,aAAa,IAAI,OAAO,CAAC,kBAAkB;YAC3C,MAAM;YACN,QAAQ,eAAe;gBAAC;aAAa,GAAG;QAC1C;IACF;AACF","debugId":null}},
    {"offset": {"line": 492, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hu/Downloads/Compressed/luuppi-next-main4/luuppi-next-main/next/src/libs/utils/analyze-read-time.ts"],"sourcesContent":["import { APIResponseData } from '@/types/types';\n\n/**\n * Analyze read time of a news article based on its content\n * @param news - The news article to analyze\n * @returns The estimated read time in minutes\n */\nexport const analyzeReadTime = (\n  news: APIResponseData<'api::news-single.news-single'>,\n) => {\n  const content = news.attributes.content\n    .map((c) => c.children.map((c) => (c.type === 'text' ? c.text : '')))\n    .join(' ');\n  const words = content.split(' ').length;\n  const readTime = Math.ceil(words / 200);\n  return readTime < 1 ? 1 : readTime;\n};\n"],"names":[],"mappings":";;;AAOO,MAAM,kBAAkB,CAC7B;IAEA,MAAM,UAAU,KAAK,UAAU,CAAC,OAAO,CACpC,GAAG,CAAC,CAAC,IAAM,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAO,EAAE,IAAI,KAAK,SAAS,EAAE,IAAI,GAAG,KAC/D,IAAI,CAAC;IACR,MAAM,QAAQ,QAAQ,KAAK,CAAC,KAAK,MAAM;IACvC,MAAM,WAAW,KAAK,IAAI,CAAC,QAAQ;IACnC,OAAO,WAAW,IAAI,IAAI;AAC5B","debugId":null}},
    {"offset": {"line": 507, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hu/Downloads/Compressed/luuppi-next-main4/luuppi-next-main/next/src/app/%5Blang%5D/%28content-pages%29/news/page.tsx"],"sourcesContent":["import { getDictionary } from '@/dictionaries';\nimport { dateFormat } from '@/libs/constants';\nimport { flipNewsLocale } from '@/libs/strapi/flip-locale';\nimport { formatMetadata } from '@/libs/strapi/format-metadata';\nimport { getStrapiData } from '@/libs/strapi/get-strapi-data';\nimport { getStrapiUrl } from '@/libs/strapi/get-strapi-url';\nimport { analyzeReadTime } from '@/libs/utils/analyze-read-time';\nimport { SupportedLanguage } from '@/models/locale';\nimport {\n  APIResponse,\n  APIResponseCollection,\n  APIResponseData,\n} from '@/types/types';\nimport { Metadata } from 'next';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { FaUserAlt } from 'react-icons/fa';\nimport { PiImageBroken } from 'react-icons/pi';\n\ninterface NewsProps {\n  params: Promise<{ lang: SupportedLanguage }>;\n}\n\nexport default async function News(props: NewsProps) {\n  const params = await props.params;\n  const pageData = await getStrapiData<\n    APIResponseCollection<'api::news-single.news-single'>\n  >(\n    'tr',\n    '/api/news?populate[0]=banner&populate[1]=authorImage&populate[3]=localizations&pagination[pageSize]=100',\n    ['news-single'],\n  );\n\n  const newsLocaleFlipped = flipNewsLocale(params.lang, pageData.data);\n  const dictionary = await getDictionary(params.lang);\n\n  const sortedNews = newsLocaleFlipped\n    .filter((n) => n.attributes.createdAt)\n    .sort((a, b) => {\n      const dateA = a.attributes?.publishedAt\n        ? new Date(a.attributes.publishedAt).getTime()\n        : new Date(a.attributes.createdAt || new Date()).getTime();\n      const dateB = b.attributes.publishedAt\n        ? new Date(b.attributes.publishedAt).getTime()\n        : new Date(b.attributes.createdAt || new Date()).getTime();\n\n      return dateB - dateA;\n    });\n\n  return (\n    <div className=\"relative flex flex-col gap-12\">\n      <h1>{dictionary.navigation.news}</h1>\n      <div className=\"flex flex-col gap-12 max-md:gap-6\">\n        {sortedNews.map((news) => (\n          <article\n            key={news.attributes.title}\n            className={\n              'flex gap-4 rounded-lg border border-gray-200/50 bg-background-50 shadow-sm max-sm:flex-col'\n            }\n          >\n            <div\n              className={\n                'relative aspect-video w-full bg-gradient-to-r from-secondary-400 to-primary-300 max-sm:rounded-t-lg sm:rounded-l-lg'\n              }\n            >\n              {news.attributes.banner?.data?.attributes?.url ? (\n                <Image\n                  alt=\"News banner\"\n                  className={'object-cover max-sm:rounded-t-lg sm:rounded-l-lg'}\n                  sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw\"\n                  src={getStrapiUrl(\n                    news.attributes.banner?.data.attributes.url,\n                  )}\n                  fill\n                />\n              ) : (\n                <div className=\"flex h-full items-center justify-center\">\n                  <PiImageBroken className=\"text-8xl text-white\" />\n                </div>\n              )}\n            </div>\n            <div className=\"flex w-full flex-col justify-between gap-6 p-4\">\n              <div className=\"flex flex-col gap-1\">\n                <div className=\"flex items-center justify-between gap-2\">\n                  <span className=\"text-sm font-bold uppercase text-accent-400\">\n                    {news.attributes.category}\n                  </span>\n                  <p\n                    className={\n                      'flex items-center gap-1 text-sm font-semibold uppercase opacity-75'\n                    }\n                  >\n                    {analyzeReadTime(\n                      news as APIResponseData<'api::news-single.news-single'>,\n                    )}{' '}\n                    {dictionary.general.min_read}\n                  </p>\n                </div>\n                <Link\n                  className={\n                    'inline-block text-2xl font-bold hover:underline max-lg:text-xl'\n                  }\n                  href={`/${params.lang}/news/${news.attributes.slug}`}\n                >\n                  {news.attributes.title}\n                </Link>\n                <p className=\"line-clamp-4\">{news.attributes.description}</p>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                {news.attributes.authorImage?.data?.attributes?.url ? (\n                  <Image\n                    alt=\"News author avatar\"\n                    className=\"h-[50px] w-[50px] rounded-full bg-gradient-to-r from-secondary-400 to-primary-300 object-cover\"\n                    height={50}\n                    src={getStrapiUrl(\n                      news.attributes.authorImage.data?.attributes.url,\n                    )}\n                    width={50}\n                  />\n                ) : (\n                  <div className=\"flex h-[50px] w-[50px] shrink-0 items-center justify-center rounded-full bg-gradient-to-r from-secondary-400 to-primary-300\">\n                    <FaUserAlt color=\"white\" size={20} />\n                  </div>\n                )}\n                <div className=\"flex flex-col\">\n                  <span className=\"text-sm font-semibold\">\n                    {news.attributes.authorName}\n                  </span>\n                  <span className=\"text-sm opacity-60\">\n                    {new Date(\n                      news.attributes?.publishedAt ||\n                        news.attributes.createdAt!,\n                    ).toLocaleDateString(params.lang, dateFormat)}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </article>\n        ))}\n      </div>\n      <div className=\"luuppi-pattern absolute -left-48 -top-10 -z-50 h-[701px] w-[801px] max-md:left-0 max-md:h-full max-md:w-full max-md:rounded-none\" />\n    </div>\n  );\n}\n\nexport async function generateMetadata(props: NewsProps): Promise<Metadata> {\n  const params = await props.params;\n  const url =\n    '/api/news-list?populate=Seo.twitter.twitterImage&populate=Seo.openGraph.openGraphImage&populate=ContactBanner';\n  const tags = ['news-list'];\n\n  const data = await getStrapiData<APIResponse<'api::news-list.news-list'>>(\n    params.lang,\n    url,\n    tags,\n  );\n\n  const pathname = `/${params.lang}/news`;\n\n  return formatMetadata(data, pathname);\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;;;;;;;;;;;;;AAMe,eAAe,KAAK,KAAgB;IACjD,MAAM,SAAS,MAAM,MAAM,MAAM;IACjC,MAAM,WAAW,MAAM,CAAA,GAAA,8IAAA,CAAA,gBAAa,AAAD,EAGjC,MACA,2GACA;QAAC;KAAc;IAGjB,MAAM,oBAAoB,CAAA,GAAA,uIAAA,CAAA,iBAAc,AAAD,EAAE,OAAO,IAAI,EAAE,SAAS,IAAI;IACnE,MAAM,aAAa,MAAM,CAAA,GAAA,mHAAA,CAAA,gBAAa,AAAD,EAAE,OAAO,IAAI;IAElD,MAAM,aAAa,kBAChB,MAAM,CAAC,CAAC,IAAM,EAAE,UAAU,CAAC,SAAS,EACpC,IAAI,CAAC,CAAC,GAAG;QACR,MAAM,QAAQ,EAAE,UAAU,EAAE,cACxB,IAAI,KAAK,EAAE,UAAU,CAAC,WAAW,EAAE,OAAO,KAC1C,IAAI,KAAK,EAAE,UAAU,CAAC,SAAS,IAAI,IAAI,QAAQ,OAAO;QAC1D,MAAM,QAAQ,EAAE,UAAU,CAAC,WAAW,GAClC,IAAI,KAAK,EAAE,UAAU,CAAC,WAAW,EAAE,OAAO,KAC1C,IAAI,KAAK,EAAE,UAAU,CAAC,SAAS,IAAI,IAAI,QAAQ,OAAO;QAE1D,OAAO,QAAQ;IACjB;IAEF,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;0BAAI,WAAW,UAAU,CAAC,IAAI;;;;;;0BAC/B,8OAAC;gBAAI,WAAU;0BACZ,WAAW,GAAG,CAAC,CAAC,qBACf,8OAAC;wBAEC,WACE;;0CAGF,8OAAC;gCACC,WACE;0CAGD,KAAK,UAAU,CAAC,MAAM,EAAE,MAAM,YAAY,oBACzC,8OAAC,6HAAA,CAAA,UAAK;oCACJ,KAAI;oCACJ,WAAW;oCACX,OAAM;oCACN,KAAK,CAAA,GAAA,6IAAA,CAAA,eAAY,AAAD,EACd,KAAK,UAAU,CAAC,MAAM,EAAE,KAAK,WAAW;oCAE1C,IAAI;;;;;yDAGN,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC,8IAAA,CAAA,gBAAa;wCAAC,WAAU;;;;;;;;;;;;;;;;0CAI/B,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAK,WAAU;kEACb,KAAK,UAAU,CAAC,QAAQ;;;;;;kEAE3B,8OAAC;wDACC,WACE;;4DAGD,CAAA,GAAA,+IAAA,CAAA,kBAAe,AAAD,EACb;4DACC;4DACF,WAAW,OAAO,CAAC,QAAQ;;;;;;;;;;;;;0DAGhC,8OAAC,4JAAA,CAAA,UAAI;gDACH,WACE;gDAEF,MAAM,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC,MAAM,EAAE,KAAK,UAAU,CAAC,IAAI,EAAE;0DAEnD,KAAK,UAAU,CAAC,KAAK;;;;;;0DAExB,8OAAC;gDAAE,WAAU;0DAAgB,KAAK,UAAU,CAAC,WAAW;;;;;;;;;;;;kDAE1D,8OAAC;wCAAI,WAAU;;4CACZ,KAAK,UAAU,CAAC,WAAW,EAAE,MAAM,YAAY,oBAC9C,8OAAC,6HAAA,CAAA,UAAK;gDACJ,KAAI;gDACJ,WAAU;gDACV,QAAQ;gDACR,KAAK,CAAA,GAAA,6IAAA,CAAA,eAAY,AAAD,EACd,KAAK,UAAU,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW;gDAE/C,OAAO;;;;;qEAGT,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC,8IAAA,CAAA,YAAS;oDAAC,OAAM;oDAAQ,MAAM;;;;;;;;;;;0DAGnC,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAK,WAAU;kEACb,KAAK,UAAU,CAAC,UAAU;;;;;;kEAE7B,8OAAC;wDAAK,WAAU;kEACb,IAAI,KACH,KAAK,UAAU,EAAE,eACf,KAAK,UAAU,CAAC,SAAS,EAC3B,kBAAkB,CAAC,OAAO,IAAI,EAAE,6IAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;;;;;;;;;uBA7E/C,KAAK,UAAU,CAAC,KAAK;;;;;;;;;;0BAqFhC,8OAAC;gBAAI,WAAU;;;;;;;;;;;;AAGrB;AAEO,eAAe,iBAAiB,KAAgB;IACrD,MAAM,SAAS,MAAM,MAAM,MAAM;IACjC,MAAM,MACJ;IACF,MAAM,OAAO;QAAC;KAAY;IAE1B,MAAM,OAAO,MAAM,CAAA,GAAA,8IAAA,CAAA,gBAAa,AAAD,EAC7B,OAAO,IAAI,EACX,KACA;IAGF,MAAM,WAAW,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC;IAEvC,OAAO,CAAA,GAAA,2IAAA,CAAA,iBAAc,AAAD,EAAE,MAAM;AAC9B","debugId":null}}]
}